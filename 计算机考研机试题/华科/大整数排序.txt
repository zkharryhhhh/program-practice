//整数长度太大，应用string类型来储存，在c++中若想使用cin>>string,应该使用<string>头文件，
//总体来看是冒泡法的思想，在每次比较中，先比较长度b，箬一致，就用string类型直接进行比较，在更换时要注意对应的a和b都要更换。
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<string>
#include<iostream>
#include<cmath>
using namespace std;

int main() {
	int N;
	cin >> N;
	string a[100];
	int b[100];
	for (int i = 0; i < N; i++) {
		cin >> a[i];
		b[i] = a[i].length();
	}
	for (int i = 0; i < N-1; i++) {
		for (int j = 0; j < N-1-i; j++) {
			if (b[j] > b[j+1]) {
				string t;
				t = a[j+1];
				a[j+1] = a[j];
				a[j] = t;
				int c = b[j + 1];
				b[j + 1] = b[j];
				b[j] = c;
				continue;
			}
			if (b[j] == b[j+1]) {
				if (a[j] > a[j+1]) {
					string t;
					t = a[j + 1];
					a[j + 1] = a[j];
					a[j] = t;
					int c = b[j + 1];
					b[j + 1] = b[j];
					b[j] = c;
				}
			}
		}
	}
	for (int i = 0; i < N; i++) {
		cout << a[i] << endl;
	}
	
	getchar();
	getchar();
	getchar();
	return 0;
	
}


//高票答案
//在c++中，vector是一个十分有用的容器，下面对这个容器做一下总结。
//作用：它能够像容器一样存放各种类型的对象，简单地说，vector是一个能够存放任意类型的动态数组，能够增加和压缩数据。

1 基本操作

(1)头文件#include<vector>.

(2)创建vector对象，vector<int> vec;

(3)尾部插入数字：vec.push_back(a);

(4)使用下标访问元素，cout<<vec[0]<<endl;记住下标是从0开始的。

(5)使用迭代器访问元素.

(6)插入元素：    vec.insert(vec.begin()+i,a);在第i+1个元素前面插入a;

(7)删除元素：    vec.erase(vec.begin()+2);删除第3个元素

vec.erase(vec.begin()+i,vec.end()+j);删除区间[i,j-1];区间从0开始

(8)向量大小:vec.size();

(9)清空:vec.clear();
#include<iostream>
#include<vector>
#include<string>
#include<algorithm>
using namespace std;
//排序的思想和我的一致，封装了函数，更为清晰
//static函数与普通函数的区别：
　　用static修饰的函数，本限定在本源码文件中，不能被本源码文件以外的代码文件调用。而普通的函数，默认是extern的，也就是说，可以被其它代码文件调用该函数。
　　在函数的返回类型前加上关键字static，函数就被定义成为静态函数。普通 函数的定义和声明默认情况下是extern的，但静态函数只是在声明他的文件当中可见，不能被其他文件所用。因此定义静态函数有以下好处：
　　<1> 其他文件中可以定义相同名字的函数，不会发生冲突。
　　<2> 静态函数不能被其他文件所用。
static bool comp(string a, string b)
{
	if (a.length()<b.length())
		return true;
	if (a.length()>b.length())
		return false;
	if (a.length() == b.length())
		return a<b;
	return false;
}
int main()
{
	int N;
	while (cin >> N)
	{
		vector<string> vec(N, "");//定义一个vector，类型为string，名为vec，初始化操作个数为N，初始值为""
		for (int i = 0; i<N; i++)
			cin >> vec[i];
		sort(vec.begin(), vec.end(), comp);//参数值依次为初始值，结束值，排序方式

		for (int i = 0; i<N; i++)
			cout << vec[i] << endl;
		//cout<<vec[N-1];
	}
	return 0;
}
